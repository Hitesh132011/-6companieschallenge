/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int ans=INT_MIN;
vector<int>solve(TreeNode* root)
{
    if(root==NULL)
    return {INT_MAX,INT_MIN,0};
    vector<int>l=solve(root->left);
    vector<int>r=solve(root->right);
    if(l[1]>=root->val || r[0]<=root->val)
    {
        return {INT_MIN,INT_MAX,0};
    }
    int res=l[2]+r[2]+root->val;
    ans=max(res,ans);
    return {min(root->val,l[0]),max(r[1],root->val),res};
}
    int maxSumBST(TreeNode* root) {
        vector<int>a=solve(root);
        if(ans<0)
        return 0;
        return ans;
        
        
    }
};
