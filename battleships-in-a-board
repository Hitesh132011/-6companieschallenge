class Solution {
public:
void solve(int i,int j,vector<vector<char>>&board)
{
    if(i>=board.size() || board[0].size()<=j || i<0 || j<0)
    return ;
    if(board[i][j]=='.')
    return; 
    board[i][j]='.';
    solve(i-1,j,board);
    solve(i+1,j,board);
    solve(i,j-1,board);
    solve(i,j+1,board);
}
    int countBattleships(vector<vector<char>>& board) {
        int c=0;
        if(board.size()==0)
        return c;
        int n=board.size();
        int m=board[0].size();
      //vector<vector<int>vis(n,vactor<int>(m,0));
       // queue<pair<int,int>>pq;
        for(int i=0;i<n;++i)
        {
            for(int j=0;j<m;++j)
            {
                if(board[i][j]=='X')
                {
                    c++;
                    solve(i,j,board);
                }
               // pq.push({i,j});
            }
        }
        return c;
       


        
    }
};
