class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        map<string,int>s;
        for(int i=0;i<words.size();++i)
        {
            s[words[i]]++;
        }
 auto cmp = [](const pair<int, string>& a, const pair<int, string>& b) {
        if (a.first == b.first) {
            return a.second > b.second; 
        }
        return a.first < b.first; 
    };

    priority_queue<pair<int, string>, vector<pair<int, string>>, decltype(cmp)> pq(cmp);        for(auto it:s)
        {
            pq.push({it.second,it.first});
        }
        vector<string>m;
        for(int i=0;i<k;++i)
        {
            m.push_back(pq.top().second);
            pq.pop();
        }
        return m;

        
    }
};
